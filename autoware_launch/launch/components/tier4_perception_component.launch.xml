<?xml version="1.0"?>
<launch>
  <arg name="occupancy_grid_map_method" default="pointcloud_based_occupancy_grid_map" description="options: pointcloud_based_occupancy_grid_map, laserscan_based_occupancy_grid_map"/>
  <arg name="occupancy_grid_map_updater" default="binary_bayes_filter" description="options: binary_bayes_filter"/>

  <include file="$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml">
    <arg name="mode" value="$(var perception_mode)"/>
    <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
    <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
    <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    <arg name="use_empty_dynamic_object_publisher" value="true"/>
    <arg name="use_traffic_light_recognition" value="false"/>
    <arg name="enable_fine_detection" value="$(var traffic_light_recognition/enable_fine_detection)"/>
    <arg name="occupancy_grid_map_method" value="$(var occupancy_grid_map_method)"/>
    <arg name="occupancy_grid_map_updater" value="$(var occupancy_grid_map_updater)"/>

    <!-- object recognition -->
    <arg name="object_recognition_detection_compare_map_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/compare_map.param.yaml"/>
    <arg
      name="object_recognition_detection_euclidean_cluster_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/euclidean_cluster.param.yaml"
    />
    <arg name="object_recognition_detection_outlier_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/outlier.param.yaml"/>
    <arg
      name="object_recognition_detection_voxel_grid_based_euclidean_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/voxel_grid.param.yaml"
    />
    <arg
      name="object_recognition_detection_voxel_grid_based_euclidean_cluster_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/voxel_grid_based_euclidean_cluster.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_lanelet_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/object_lanelet_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_position_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/object_position_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_pointcloud_map_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/pointcloud_filter/pointcloud_map_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_fusion_sync_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_sync.param.yaml"
    />
    <arg
      name="object_recognition_prediction_map_based_prediction_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/prediction/map_based_prediction.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_merger_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_merger/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_merger_distance_threshold_list_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_merger/overlapped_judge.param.yaml"
    />
    <arg name="object_recognition_detection_lidar_model_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/lidar_model"/>
    <arg
      name="object_recognition_tracking_multi_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_tracking_setting_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/default_tracker.param.yaml"
    />

    <!-- obstacle segmentation -->
    <arg
      name="obstacle_segmentation_ground_segmentation_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/obstacle_segmentation/ground_segmentation/ground_segmentation.param.yaml"
    />
    <arg
      name="obstacle_segmentation_ground_segmentation_elevation_map_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/obstacle_segmentation/ground_segmentation/elevation_map_parameters.yaml"
    />

    <!-- occupancy grid map -->
    <arg name="occupancy_grid_map_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_method).param.yaml"/>
    <arg name="occupancy_grid_map_updater_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_updater)_updater.param.yaml"/>
  </include>
</launch>
